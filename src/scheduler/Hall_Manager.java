package scheduler;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yeo yu le
 */
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class Hall_Manager extends javax.swing.JFrame {

    ArrayList<JCheckBox> checkboxlist = new ArrayList<>();
    ArrayList<Hall> hallData = new ArrayList<>();
    private DataValidation validater;
    private SetImage imageSetter = new ImageSetter();
    /**
     * Creates new form Add_Hall
     */
    public Hall_Manager() {
        initComponents();
        imageSetter.SetImageSize(60, lblHall1,lblSchedule1);
     
        checkboxlist.add(cboxSpeaker);
        checkboxlist.add(cboxLight);
        checkboxlist.add(cboxProjector);
        checkboxlist.add(cboxLectern);
        checkboxlist.add(cboxMic);
        checkboxlist.add(cboxWhiteboard);
        
        LoadHallTable();
        Hall hall = new Hall();
        hall.LoadHallName(cboHallName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cboHallType = new javax.swing.JComboBox<>();
        txtHallName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboxSpeaker = new javax.swing.JCheckBox();
        cboxMic = new javax.swing.JCheckBox();
        cboxProjector = new javax.swing.JCheckBox();
        cboxLectern = new javax.swing.JCheckBox();
        cboxLight = new javax.swing.JCheckBox();
        cboxWhiteboard = new javax.swing.JCheckBox();
        btnClear = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cboHallName = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHall = new javax.swing.JTable();
        pnlNav1 = new javax.swing.JPanel();
        lblHall1 = new javax.swing.JLabel();
        lblSchedule1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 51, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Hall Type");

        cboHallType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auditorium", "Banquet Hall", "Meeting Room" }));
        cboHallType.setSelectedIndex(-1);
        cboHallType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHallTypeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Hall Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Capacity");

        txtCapacity.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Equipment");

        cboxSpeaker.setText("Speakers");

        cboxMic.setText("Microphone");

        cboxProjector.setText("Projector");

        cboxLectern.setText("Lectern");

        cboxLight.setText("Stage Ligthing");

        cboxWhiteboard.setText("Whiteboard");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(102, 255, 255));
        btnEdit.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(51, 0, 153));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 255, 255));
        btnDelete.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 0, 153));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 255, 255));
        btnAdd.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(51, 0, 153));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Medium", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Select a hall to \"edit\" or \"delete\"");

        cboHallName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHallNameActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 102));
        jLabel6.setText("----------------------------------------------------------------------------------------------------");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 102));
        jLabel8.setText("OR");

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Medium", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 102));
        jLabel9.setText("Choose a hall from the Table");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5))
                                .addGap(26, 26, 26)))
                        .addComponent(cboHallName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(cboxSpeaker)
                            .addComponent(cboxProjector)
                            .addComponent(cboxMic)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboHallType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cboxLight)
                                .addComponent(cboxLectern)
                                .addComponent(txtCapacity)
                                .addComponent(txtHallName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cboxWhiteboard))
                        .addGap(136, 136, 136))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboHallName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboHallType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtHallName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cboxSpeaker)
                        .addGap(9, 9, 9)
                        .addComponent(cboxProjector)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboxMic))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(cboxLight)
                        .addGap(9, 9, 9)
                        .addComponent(cboxLectern)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboxWhiteboard)))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(btnClear)
                .addGap(44, 44, 44))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        tblHall.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hall Type", "Hall Name", "Capacity", "Equipment"
            }
        ));
        tblHall.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHallMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHall);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlNav1.setBackground(new java.awt.Color(37, 5, 62));

        lblHall1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblHall1.setForeground(new java.awt.Color(255, 255, 255));
        lblHall1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHall1.setText("Hall Manager");
        lblHall1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHall1.setPreferredSize(new java.awt.Dimension(69, 48));
        lblHall1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblHall1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHall1MouseClicked(evt);
            }
        });

        lblSchedule1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSchedule1.setForeground(new java.awt.Color(255, 255, 255));
        lblSchedule1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSchedule1.setText("Schedule");
        lblSchedule1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSchedule1.setMaximumSize(new java.awt.Dimension(62, 60));
        lblSchedule1.setMinimumSize(new java.awt.Dimension(62, 60));
        lblSchedule1.setPreferredSize(new java.awt.Dimension(62, 60));
        lblSchedule1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblSchedule1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSchedule1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlNav1Layout = new javax.swing.GroupLayout(pnlNav1);
        pnlNav1.setLayout(pnlNav1Layout);
        pnlNav1Layout.setHorizontalGroup(
            pnlNav1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNav1Layout.createSequentialGroup()
                .addGroup(pnlNav1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNav1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHall1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlNav1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblSchedule1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlNav1Layout.setVerticalGroup(
            pnlNav1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNav1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(lblHall1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(lblSchedule1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlNav1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlNav1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboHallTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHallTypeActionPerformed
        int i = cboHallType.getSelectedIndex();
        switch (i){
            case 0:
            txtCapacity.setText("1000");
            break;
            case 1:
            txtCapacity.setText("300");
            break;
            case 2:
            txtCapacity.setText("30");
            break;
            default:
            txtCapacity.setText(null);
        }
    }//GEN-LAST:event_cboHallTypeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        DataValidation validater = SettingData();       

        if (validater.ValidateData()){
            String hallType = cboHallType.getSelectedItem().toString();
            String hallName = txtHallName.getText();
            String capacity = txtCapacity.getText();
            String equipment = AnyCheckboxSelected();

            Hall hall = new Hall(hallType, hallName, capacity, equipment);
            hall.WriteHall();
            
            LoadHallTable(); 
            cboHallName.removeAllItems();
            hall.LoadHallName(cboHallName);
        }
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblHallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHallMouseClicked
        for (JCheckBox cbox: checkboxlist){
            cbox.setSelected(false);
        }
        int row = tblHall.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel)tblHall.getModel();
        
        cboHallName.setSelectedItem(model.getValueAt(row, 1));
        cboHallType.setSelectedItem(model.getValueAt(row, 0));
        txtHallName.setText(model.getValueAt(row, 1).toString());
        txtCapacity.setText(model.getValueAt(row, 2).toString());

        String equipment = model.getValueAt(row, 3).toString();
        equipment = equipment.replace("[", "").replace("]", "");
        String[] equipment_part = {equipment};
        
        if (equipment.contains(",")){equipment_part = equipment.split(",");}        
            
        for (String e: equipment_part){
            System.out.println(e);
            for (JCheckBox cbox: checkboxlist){
                if (cbox.getText().equals(e)){
                    cbox.setSelected(true);
                }
            }
        }

    }//GEN-LAST:event_tblHallMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String key = cboHallName.getSelectedItem().toString();
       
        DataValidation validater = SettingData();
        
        if (validater.ValidateData()){
            FileOperation.DeleteFile("hall.txt");
            
            for (Hall h:hallData){
                if (key.equals(h.getHallName())){
                    h.setHallType(cboHallType.getSelectedItem().toString());
                    h.setHallName(txtHallName.getText());
                    h.setCapacity(txtCapacity.getText());
                    h.setEquipment(AnyCheckboxSelected());
                }
                Hall hall = new Hall(h.getHallType(),h.getHallName(),h.getCapacity(),h.getEquipment());
                hall.WriteHall();
            }
            LoadHallTable();
            cboHallName.removeAllItems();
            Hall hall_operate = new Hall();
            hall_operate.LoadHallName(cboHallName);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void cboHallNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHallNameActionPerformed
        for (JCheckBox cbox: checkboxlist){
            cbox.setSelected(false);
        }
        if (cboHallName.getSelectedItem() != null){
            for (Hall h: hallData){
                if (cboHallName.getSelectedItem().toString().equals(h.getHallName())){
                    cboHallType.setSelectedItem(h.getHallType());
                    txtHallName.setText(h.getHallName());
                    txtCapacity.setText(h.getCapacity());

                    String equipment = h.getEquipment();
                    equipment = equipment.replace("[", "").replace("]", "");
                    String[] equipment_part = {equipment};

                    if (equipment.contains(",")){equipment_part = equipment.split(",");}        

                    for (String e: equipment_part){
                        System.out.println(e);
                        for (JCheckBox cbox: checkboxlist){
                            if (cbox.getText().equals(e)){
                                cbox.setSelected(true);
                            }
                        }
                    }
                }
            }
            
        }
    }//GEN-LAST:event_cboHallNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String key = cboHallName.getSelectedItem().toString();        

        int confirm = JOptionPane.showConfirmDialog(null, "You are going to delete '" + key + "'. Do you confirm?", "Confirmation", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION){
            FileOperation.DeleteFile("hall.txt");        
            for (int i = 0; i < hallData.size(); i++) {
                Hall h = hallData.get(i);
                if (key.equals(h.getHallName())) {
                    hallData.remove(i);
                    i--;  // Decrease the index after removal to prevent skipping elements
                } else {
                    Hall hall = new Hall(h.getHallType(), h.getHallName(), h.getCapacity(), h.getEquipment());
                    hall.WriteHall();
                }
            }
            
            JOptionPane.showMessageDialog(null, "The data has been deleted successfully");
            
            LoadHallTable();
            cboHallName.removeAllItems();
            Hall hall_operate = new Hall();
            hall_operate.LoadHallName(cboHallName);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        cboHallName.setSelectedIndex(-1);
        cboHallType.setSelectedIndex(-1);
        txtHallName.setText("");
        txtCapacity.setText("");
        for (JCheckBox cbox: checkboxlist){
            cbox.setSelected(false);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void lblHall1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHall1MouseClicked
        Hall_Manager hall = new Hall_Manager();
        hall.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblHall1MouseClicked

    private void lblSchedule1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSchedule1MouseClicked
        Hall_Availability hall = new Hall_Availability();
        hall.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblSchedule1MouseClicked

    private Hall SettingData(){
        Hall hall = new Hall();
        hall.setHallType(cboHallType.getSelectedItem().toString());
        hall.setHallName(txtHallName.getText());
        hall.setCapacity(txtCapacity.getText());
        hall.setEquipment(AnyCheckboxSelected());
        hall.setHallData(hallData);
        
        return hall;
    }
    
    private void LoadHallTable(){       
        try {
            hallData = FileOperation.ReadHall("hall.txt");
            
            DefaultTableModel model = (DefaultTableModel)tblHall.getModel();
            
            model.setRowCount(0);
            
            for (Hall h: hallData){
                model.addRow(new Object[]{
                    h.getHallType(),
                    h.getHallName(),
                    h.getCapacity(),
                    h.getEquipment()                    
                });
            }
        } catch (IOException ex) {
            System.out.println(ex);
            ex.printStackTrace();
        }
    }
    
    private String AnyCheckboxSelected(){
        StringBuilder sb = new StringBuilder("[");
        
        for (JCheckBox cbox : checkboxlist){
            if (cbox.isSelected()){
                sb.append(cbox.getText()).append(",");
            }
        }

        // remove the comma
        if (sb.length() > 1){
            sb.setLength(sb.length() - 1);
            sb.append("]");
        }
        else{
            return "";
        }
        return sb.toString();
    }    
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hall_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hall_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hall_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hall_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hall_Manager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JComboBox<String> cboHallName;
    private javax.swing.JComboBox<String> cboHallType;
    private javax.swing.JCheckBox cboxLectern;
    private javax.swing.JCheckBox cboxLight;
    private javax.swing.JCheckBox cboxMic;
    private javax.swing.JCheckBox cboxProjector;
    private javax.swing.JCheckBox cboxSpeaker;
    private javax.swing.JCheckBox cboxWhiteboard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHall1;
    private javax.swing.JLabel lblSchedule1;
    private javax.swing.JPanel pnlNav1;
    private javax.swing.JTable tblHall;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtHallName;
    // End of variables declaration//GEN-END:variables
}
